---
global:
  # Configuration shared by all services.
  aserto:
    # Kubernetes pull secret for private Aserto images.
    # imagePullSecrets:
    #   - name: ghcr-creds

    # [REQUIRED] OpenID Connect configuration.
    oidc:
      domain: ""
      audience: ""

    # Port configuration.
    ports:
      grpc: 8282
      https: 8383
      health: 8484
      mertics: 8585

    # gRPC configuration.
    grpc:
      connectionTimeoutSec: 2

    # HTTPS configuration.
    https:
      read_timeout: 2s
      read_header_timeout: 2s
      write_timeout: 2s
      idle_timeout: 30s

      # [REQUIRED] Specify the ingress address of the
      # conosle service.
      allowed_origins:
      # - https://console.aserto.example.com

    # Metrics configuration.
    metrics:
      zpages: false

    # Controller connection configuration.
    # Services use these options when connecting to the controller.
    controller:
      # Use plain-text connection between pods.
      noTLS: true
      # # Address and port of the controller's gRPC service.
      # # Default: controller.<namespace>.svc.cluster.local:8282
      # address: ""
      # # [Optiona] Controller API keys. All three fields are required.
      # apiKeys:
      #   read: ""
      #   write: ""
      #   store: ""
      # # [Optional] Kubernetes secret containing the controller's API keys.
      # apiKeysSecret: controller-keys
      # # [Optional] Kubernetes secret containing the CA certificate of the root directory.
      # caCertSecret:
      #   name: ""
      #   key: ""
      # # Skip verification of remote TLS certificate
      # noVerify: false

    directory:
      # Use plain-text connection between pods.
      noTLS: true
      # # Address and port of the directory's gRPC service.
      # # Default: directory.<namespace>.svc.cluster.local:8282
      # address: ""
      # # [Optiona] Directory API keys.
      # apiKeys:
      #   read: ""
      #   write: ""
      #   store: ""
      # # [Optional] Kubernetes secret containing the directory's API keys.
      # apiKeysSecret: directory-keys
      # # [Optional] Kubernetes secret containing the directory's CA certificate.
      # caCertSecret:
      #   name: ""
      #   key: ""
      # # Skip verification of remote TLS certificate
      # noVerify: false

controller:
  # Database configuration.
  database:
    # [REQUIRED] Host name of the root directory PostgreSQL instance.
    host: ""
    port: 5432
    # Set to 'disable` if the PostgreSQL instance does not use SSL.
    sslMode: require
    admin:
      # Kubernetes secret containing credentials for the root database's owner.
      credentialsSecret: pg-controller-credentials

  # Required: Provide one or more SSH public keys to be granted admin access.
  # sshAdminKeys: |
  #   # Add your authorized SSH public keys here
  #   ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDf6
  #   ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDa7


directory:
  controller:
    enabled: true
  # Kubernetes pull secret for private Aserto images.
  # imagePullSecrets:
  #   - name: ghcr-creds

  # Override the directory image and tag.
  # image:
  #   repository: ghcr.io/aserto-dev/directory
  #   tag: x.y.z
  #   pullPolicy: IfNotPresent

  # Database configuration.
  database:
    # [REQUIRED] Host name of the tenant directory PostgreSQL instance.
    host: ""
    port: 5432
    # Set to 'disable` if the PostgreSQL instance does not use SSL.
    sslMode: require
    admin:
      # Kubernetes secret containing credentials for the tenant database's owner.
      credentialsSecret: pg-directory-credentials

discovery:
  enabled: true
  # Kubernetes pull secret for private Aserto images.
  # imagePullSecrets:
  #   - name: ghcr-creds

  # Override the discovery image and tag.
  # image:
  #   repository: ghcr.io/aserto-dev/self-hosted-discovery
  #   tag: x.y.z
  #   pullPolicy: IfNotPresent
  registries:
    # [REQUIRED] At least one policy registry must be configured.
    # ghcr.io:
    #   scheme: bearer
    #   tokenSecretName: discovery-ghcr-token
    #   tokenSecretKey: token

console:
  enabled: true
  # Kubernetes pull secret for private Aserto images.
  # imagePullSecrets:
  #   - name: ghcr-creds

  # Override the console image and tag.
  # image:
  #   repository: ghcr.io/aserto-dev/multi-tenant-console
  #   tag: x.y.z
  #   pullPolicy: IfNotPresent

  # Internal HTTP port for the console service.
  # port: 3000

  # [REQUIRED] Ingress address of the authorizer service.
  # e.g. https://authorizer.aserto.example.com
  authorizerURL: ""

  # [REQUIRED] Ingress address of the directory service.
  # e.g. https://directory.aserto.example.com
  directoryURL: ""

authorizer:
  enabled: true
#   # Kubernetes pull secret for private Aserto images.
#   imagePullSecrets:
#     - name: ghcr-creds
#
#   # Override the authorizer image and tag.
#   image:
#     repository: ghcr.io/aserto-dev/directory
#     tag: x.y.z
#     pullPolicy: IfNotPresent

scim:
  enabled: false
#   # Kubernetes pull secret for private Aserto images.
#   imagePullSecrets:
#     - name: ghcr-creds
#
#   # Override the SCIM service image and tag.
#   image:
#     repository: ghcr.io/aserto-dev/scim
#     tag: x.y.z
#     pullPolicy: IfNotPresent
#
#   # SCIM authentication configuration.
#   auth:
#     # Kubernetes secret containing the SCIM service's password.
#     # If the secret does not exist, it is created with a random
#     # value on first install.
#     secretName: scim-password
#     secretKey: password
#
#     # Basic HTTP Auth configuration.
#     basic:
#       # Enable basic HTTP Auth.
#       enabled: true
#       # Basic auth user name.
#       username: scim
#     bearer:
#       # Enable bearer token auth.
#       enabled: true
#
#   createEmailIdentities: true
#   createRoleGroups: false
#   userObjectType: user
#   identityObjectType: identity
#   identityRelation: identifier
#   groupObjectType: group
#   groupMemberRelation: memeber
#   groupMappings: []
#   userMappings: []

registry-proxy:
  enabled: false
