# Default values for authorizer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
---
image:
  repository: ghcr.io/aserto-dev/authorizer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: x.y.z

# REQUIRED: specify and OIDC domain and audience
oidc:
  domain: ""
  audience: ""

apiKey:
  secretName: authorizer-keys
  secretKey: api-key

# jwtAcceptableTimeSkewSeconds: 5


# Set the service log level (trace/debug/info/warn/error)
# logLevel: info

# grpc:
#   Pods do not use TLS by default. TLS is defined on ingresses.
#   To enable TLS on pods, provide the name of a secret of type
#   kubernetes.io/tls.
#   certSecret: authorizer-grpc-cert

# http:
#   allowed_origins:
#     - https://*.example.com
#   allowed_headers:
#     - Aserto-Tenant-Id
#     - Authorization
#     - Content-Type
#     - Depth
#   read_timeout: 2s
#   read_header_timeout: 2s
#   write_timeout: 2s
#   idle_timeout: 30s
#
#   Pods do not use TLS by default. TLS is defined on ingresses.
#   To enable TLS on pods, provide the name of a secret of type
#   kubernetes.io/tls.
#   certSecret: authorizer-rest-cert

# Disable authorization
# noAuthorization: false

# cache:
#   sizeMB: 25
#   # 30 minutes
#   ttlSeconds: 1800
#   cleanWindowSeconds: 10

replicaCount: 1

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
#   fsGroup: 2000

securityContext: {}
#   capabilities:
#     drop:
#     - ALL
#   readOnlyRootFilesystem: true
#   runAsNonRoot: true
#   runAsUser: 1000

service:
  type: ClusterIP

ingress:
  enabled: false
  # domain: example.com
  className: ""
  annotations: {}
  hosts:
    - subdomain: authorizer
      port: http
      # host: authorizer.example.com
    - subdomain: grpc-authorizer
      port: grpc
      # host: grpc-authorizer.example.com
  tls: []
  #  - secretName: authorizer-tls
  #    subdomains:
  #      - authorizer
  #  - secretName: grpc-authorizer-tls
  #    subdomains:
  #      - grpc-authorizer

resources: {}
#   limits:
#     cpu: 100m
#     memory: 128Mi
#   requests:
#     cpu: 100m
#     memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
