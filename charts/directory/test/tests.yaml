---
tests:
  - name: directory-no-tls
    pull_secret: $GITHUB_TOKEN
    secrets:
      - name: pg-credentials
        values:
          username: postgres
          password: $POSTGRES_PASSWORD
      - name: pg-directory-reader-credentials
        values:
          username: directory_reader
          password: directory_reader
      - name: directory-keys
        values:
          writeKey: apikey_writer
          readKey: apikey_reader
    config_maps:
      - name: directory-admin-keys
        keys:
          - name: authorized_keys
            file: $SSH_PUBLIC_KEY
    deployments:
      - chart: directory
        values: no-tls.values.yaml
        ports:
          8282: 8282
    run:
      # Create a tenant.
      - |
        grpcurl -plaintext -H "Authorization: basic apikey_writer" \
          -d '{"tenant": {"id": "3dbaa470-9c7e-11ef-bf36-00fcb2a75cb1", "name": "test-tenant"}}' \
          localhost:8282 aserto.directory.store.v2.Store.CreateTenant

      # Set a manifest for the new tenant.
      - |
        ${TOPAZ:-topaz} ds set manifest charts/directory/test/manifest.yaml \
          -H localhost:8282 --tenant-id 3dbaa470-9c7e-11ef-bf36-00fcb2a75cb1 \
          -k apikey_reader --plaintext

      # Get the tenant's manifest.
      - |
        ${TOPAZ:-topaz} ds get manifest -H localhost:8282 --tenant-id 3dbaa470-9c7e-11ef-bf36-00fcb2a75cb1 \
          -k apikey_reader --plaintext $TMPDIR/manifest.yaml

      # Ensure the downloaded manifest has the expected content.
      - diff charts/directory/test/manifest.yaml $TMPDIR/manifest.yaml
    cleanup:
      # Delete tenant.
      - |
        grpcurl -plaintext -H "Authorization: basic apikey_writer" \
          -d '{"id": "3dbaa470-9c7e-11ef-bf36-00fcb2a75cb1"}' \
          localhost:8282 aserto.directory.store.v2.Store.DeleteTenant

  - name: directory-tls
    pull_secret: $GITHUB_TOKEN
    secrets:
      - name: pg-credentials
        values:
          username: postgres
          password: $POSTGRES_PASSWORD
      - name: pg-controller-reader-credentials
        values:
          username: controller_reader
          password: controller_reader
      - name: pg-directory-reader-credentials
        values:
          username: directory_reader
          password: directory_reader
      - name: directory-keys
        values:
          writeKey: apikey_writer
          readKey: apikey_reader
      - name: grpc-cert
        files:
          tls.crt: $TOPAZ_CERTS_DIR/grpc.crt
          tls.key: $TOPAZ_CERTS_DIR/grpc.key
          ca.crt: $TOPAZ_CERTS_DIR/grpc-ca.crt
      - name: gateway-cert
        files:
          tls.crt: $TOPAZ_CERTS_DIR/gateway.crt
          tls.key: $TOPAZ_CERTS_DIR/gateway.key
    config_maps:
      - name: directory-admin-keys
        keys:
          - name: authorized_keys
            file: $SSH_PUBLIC_KEY
    deployments:
      - chart: directory
        values: tls.values.yaml
        ports:
          8282: 8282
    run:
      # Create a tenant.
      - |
        grpcurl -insecure -H "Authorization: basic apikey_writer" \
          -d '{"tenant": {"id": "3dbaa470-9c7e-11ef-bf36-00fcb2a75cb1", "name": "test-tenant"}}' \
          localhost:8282 aserto.directory.store.v2.Store.CreateTenant

      # Set a manifest for the new tenant.
      - |
        ${TOPAZ:-topaz} ds set manifest charts/directory/test/manifest.yaml \
          -H localhost:8282 --tenant-id 3dbaa470-9c7e-11ef-bf36-00fcb2a75cb1 \
          -k apikey_reader --insecure
          #
      # Get the tenant's manifest.
      - |
        ${TOPAZ:-topaz} ds get manifest -H localhost:8282 --tenant-id 3dbaa470-9c7e-11ef-bf36-00fcb2a75cb1 \
          -k apikey_reader --insecure $TMPDIR/manifest.yaml

      # Ensure the downloaded manifest has the expected content.
      - diff charts/directory/test/manifest.yaml $TMPDIR/manifest.yaml
    cleanup:
      - |
        grpcurl -insecure -H "Authorization: basic apikey_writer" \
          -d '{"id": "3dbaa470-9c7e-11ef-bf36-00fcb2a75cb1"}' \
          localhost:8282 aserto.directory.store.v2.Store.DeleteTenant
