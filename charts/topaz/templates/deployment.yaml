{{- $persistDB := empty (.Values.directory).remote | and (((.Values.directory).edge).persistence).enabled -}}
{{- $persistOPA :=((.Values.opa).persistence).enabled -}}
{{- $persistLogs := (.Values.decisionLogs).enabled | and ((.Values.decisionLogs).persistence).enabled -}}
{{- $persistence := $persistDB | or $persistOPA | or $persistLogs -}}
---
apiVersion: apps/v1
{{- if $persistence }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "topaz.fullname" . }}
  labels:
    {{- include "topaz.labels" . | nindent 4 }}
spec:
  {{- if $persistence }}
  serviceName: {{ include "topaz.fullname" . }}
  {{- end }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "topaz.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "topaz.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "topaz.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - run
            - -c
            - /config/config.yaml
          {{- if (.Values.profiler).enabled }}
            - --debug
          {{- end }}
          ports:
            - name: grpc
              containerPort: {{ (.Values.ports).grpc | default "8282" }}
              protocol: TCP
            - name: http
              containerPort: {{ (.Values.ports).http | default "8383" }}
              protocol: TCP
            - name: health
              containerPort: {{ (.Values.ports).health | default "8484" }}
              protocol: TCP
          {{- if (.Values.metrics).enabled }}
            - name: metrics
              containerPort: {{ (.Values.ports).metrics | default "8585" }}
              protocol: TCP
          {{- end }}
          {{- if (.Values.profiler).enabled }}
            - name: profiler
              containerPort: {{ (.Values.ports).profiler | default "8686"}}
              protocol: TCP
          {{- end }}
          startupProbe:
            grpc:
              port: {{ (.Values.ports).health | default "8484" }}
            {{- toYaml .Values.startupProbe | nindent 12 }}
          livenessProbe:
            grpc:
              port: {{ (.Values.ports).health | default "8484" }}
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            grpc:
              port: {{ (.Values.ports).health | default "8484" }}
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: db
              mountPath: /db
              readOnly: false
            - name: decisions
              mountPath: /decisions
              readOnly: false
            - name: opa
              mountPath: /opa-persistence
              readOnly: false
          {{- if (.Values.tls).grpc }}
            - name: grpc-certs
              mountPath: /grpc-certs
              readOnly: true
          {{- end }}
          {{- if (.Values.tls).http }}
            - name: tls-certs
              mountPath: /tls-certs
              readOnly: true
          {{- end }}
          {{- with (.Values.directory).remote -}}
            {{ include "topaz.remoteDirectoryCertVolumeMount" . | nindent 12 }}
          {{- end }}
          {{- if (.Values.decisionLogs).remote }}
            - name: scribe-cert
              mountPath: /scribe-cert
          {{- end }}
          {{- if (.Values.controller).enabled }}
            - name: controller-cert
              mountPath: /controller-cert
          {{- end }}
            {{- with .Values.volumeMounts -}}
              {{ toYaml . | nindent 12 }}
            {{- end }}
          env:
            - name: TOPAZ_CFG_DIR
              value: /config
          {{- with ((.Values.directory).remote).apiKeySecret -}}
            {{ include "topaz.remoteDirectoryKeyEnv" . | nindent 12 }}
          {{- end }}
          {{- with (.Values.auth).apiKeys -}}
            {{ include "topaz.apiKeysEnv" . | nindent 12 }}
          {{- end }}
          {{- with (((.Values.directory).edge).sync).apiKeySecret -}}
            {{ include "topaz.edgeKeyEnv" . | nindent 12 }}
          {{- end }}
          {{- with (((.Values.opa).policy).discovery).apiKeySecret -}}
            {{ include "topaz.discoveryKeyEnv" . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ include "topaz.fullname" . }}-config
            items:
              - key: config.yaml
                path: config.yaml
      {{- with (.Values.tls).grpc }}
        - name: grpc-certs
          secret:
            secretName: {{ . }}
      {{- end }}
      {{- with (.Values.tls).http }}
        - name: tls-certs
          secret:
            secretName: {{ . }}
      {{- end }}
      {{- if ((.Values.directory).remote).address -}}
        {{ include "topaz.remoteDirectoryCertVolume" . | nindent 8 }}
      {{- end }}
      {{- if not $persistDB }}
        - name: db
          emptyDir: {}
      {{- end }}
      {{- if not $persistOPA }}
        - name: opa
          emptyDir: {}
      {{- end }}
      {{- if not $persistLogs }}
        - name: decisions
          emptyDir: {}
      {{- end }}
      {{- if (.Values.decisionLogs).remote -}}
        {{- include "topaz.scribeCertVolume" . | nindent 8 }}
      {{- end -}}
      {{- if (.Values.controller).enabled -}}
        {{- include "topaz.controllerCertVolume" .| nindent 8 }}
      {{- end -}}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if $persistence }}
  volumeClaimTemplates:
  {{- if $persistDB }}
  {{- with ((.Values.directory).edge).persistence }}
    - metadata:
        name: db
      spec:
        {{- include "topaz.volumeClaimTemplateSpec" . | nindent 8 }}
  {{- end }}
  {{- end }}
  {{- if $persistOPA }}
  {{- with (.Values.opa).persistence }}
    - metadata:
        name: opa
      spec:
        {{- include "topaz.volumeClaimTemplateSpec" . | nindent 8 }}
  {{- end }}
  {{- end }}
  {{- if $persistLogs }}
  {{- with (.Values.decisionLogs).persistence }}
    - metadata:
        name: decisions
      spec:
        {{- include "topaz.volumeClaimTemplateSpec" . | nindent 8 }}
  {{- end }}
  {{- end }}
{{- end }}

