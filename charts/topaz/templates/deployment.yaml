apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "topaz.fullname" . }}
  labels:
    {{- include "topaz.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "topaz.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "topaz.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "topaz.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ (.Values.ports).grpc | default "8282" }}
              protocol: TCP
            - name: http
              containerPort: {{ (.Values.ports).https | default "8383" }}
              protocol: TCP
            - name: health
              containerPort: {{ (.Values.ports).health | default "8484" }}
              protocol: TCP
            {{- if (.Values.metrics).enabled }}
            - name: metrics
              containerPort: {{ (.Values.ports).metrics | default "8585" }}
              protocol: TCP
            {{- end }}
          {{/*
          livenessProbe:
            grpc:
              port: {{ (.Values.ports).health | default "8484" }}
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            grpc:
              port: {{ (.Values.ports).health | default "8484" }}
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          */}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- include "topaz.apiKeysEnv" . | nindent 10 }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: db
              mountPath: /db
              readOnly: false
            - name: opa
              mountPath: /opa-persistence
              readOnly: false
            - name: grpc-certs
              mountPath: /grpc-certs
            {{- if (.Values.certs).grpc }}
              readOnly: true
            {{- end }}
            - name: https-certs
              mountPath: /https-certs
            {{- if (.Values.certs).https }}
              readOnly: true
            {{- end }}
            {{- with .Values.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ include "topaz.fullname" . }}-config
            items:
              - key: config.yaml
                path: config.yaml
        - name: grpc-certs
        {{- with (.Values.certs).grpc }}
          secret:
            secretName: {{ . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: https-certs
        {{- with (.Values.certs).https }}
          secret:
            secretName: {{ . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- if ((.Values.directory).remote).address -}}
        {{ include "topaz.remoteDirectoryCertVolume" . | nindent 8 }}
      {{- end }}
        - name: db
        {{- if empty (.Values.directory).remote | and (((.Values.directory).edge).persistence).enabled }}
          persistentVolumeClaim:
            claimName: pvc-db
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: opa
        {{- if ((.Values.opa).persistence).enabled }}
          persistentVolumeClaim:
            claimName: pvc-policy
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
