{{- $grpcPort := .Values.ports.grpc | int -}}
{{- $tlsOption := empty (.Values.tls).grpc | ternary "--plaintext" "--insecure" -}}
{{- $topazOptions := printf "-H localhost:%d %s --no-check" $grpcPort $tlsOption -}}

To access the service using the topaz CLI:
1. Forward the gRPC port to your local machine:

   POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} \
       -l "app.kubernetes.io/name={{ include "topaz.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" \
       -o jsonpath="{.items[0].metadata.name}") \
   kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME {{ print $grpcPort ":" $grpcPort }}

2. Use the topaz CLI with the '{{ $topazOptions }}' options. For example, to print the directory manifest:

   topaz ds get manifest --stdout {{ $topazOptions }}


{{ $httpPort := .Values.ports.http | int -}}
To access the topaz web console:
1. Forward the HTTP port to your local machine:

   POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} \
       -l "app.kubernetes.io/name={{ include "topaz.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" \
       -o jsonpath="{.items[0].metadata.name}") \
   kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME {{ print $httpPort ":" $httpPort }}

{{- if (.Values.tls).http }}

2. Make sure the certificate provided in the 'tls.http' value is trusted on your machine.
3. Open your browser and navigate to https://localhost:{{ $httpPort }}
{{- else }}

2. Open your browser and navigate to http://localhost:{{ $httpPort }}
{{- end }}
